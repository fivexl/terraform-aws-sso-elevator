[project]
name = "sso-elevator"
version = "3.0.0"
description = ""
authors = [
    {name = "FivexL Consuling Services", email = "open.source@fivexl.io"}
]
requires-python = ">=3.13"
dependencies = [
    "boto3-stubs[identitystore,organizations,s3,scheduler,sso-admin,events]>=1.26.134",
    "pydantic[email]>=1.10.13",
    "pydantic-settings>=2.0.0",
    "croniter>=1.3.14",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.2",
    "black>=24.3.0",
    "aws-lambda-powertools[parser]>=2.14.1",
    "boto3>=1.26.97",
    "slack-bolt>=1.26.0",
    "hypothesis[ghostwriter]>=6.71.0",
    "ruff>=0.0.267",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]


[tool.black]
line-length = 140

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 140

# Assume Python 3.13.
target-version = "py313"

[tool.ruff.lint]
select = [
  # pyflakes
  "F",
  # flake8-annotations
  "ANN",
  # flake8-unused-arguments 
  "ARG",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # pylint
  "PLC", "PLE", "PLR", "PLW",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH"
]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# Ignore annotation requirements and magic values in test files
"tests/*.py" = ["ANN", "PLR2004"]

[tool.pyright]
reportGeneralTypeIssues = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
xfail_strict = true
filterwarnings = []
